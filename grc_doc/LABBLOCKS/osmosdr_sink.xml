<?xml version="1.0"?>
<block>
  <name>osmocom Sink</name>
  <key>osmosdr_sink</key>
  <category>Sinks</category>
  <throttle>1</throttle>
  <import>import osmosdr</import>
  <make>osmosdr.sink( args="numchan=" + str($nchan) + " " + $args )
self.$(id).set_sample_rate($sample_rate)
#if $nchan() > 0
self.$(id).set_center_freq($freq0, 0)
self.$(id).set_freq_corr($corr0, 0)
self.$(id).set_gain($gain0, 0)
self.$(id).set_if_gain($if_gain0, 0)
self.$(id).set_bb_gain($bb_gain0, 0)
self.$(id).set_antenna($ant0, 0)
self.$(id).set_bandwidth($bw0, 0)
#end if
#if $nchan() > 1
self.$(id).set_center_freq($freq1, 1)
self.$(id).set_freq_corr($corr1, 1)
self.$(id).set_gain($gain1, 1)
self.$(id).set_if_gain($if_gain1, 1)
self.$(id).set_bb_gain($bb_gain1, 1)
self.$(id).set_antenna($ant1, 1)
self.$(id).set_bandwidth($bw1, 1)
#end if
#if $nchan() > 2
self.$(id).set_center_freq($freq2, 2)
self.$(id).set_freq_corr($corr2, 2)
self.$(id).set_gain($gain2, 2)
self.$(id).set_if_gain($if_gain2, 2)
self.$(id).set_bb_gain($bb_gain2, 2)
self.$(id).set_antenna($ant2, 2)
self.$(id).set_bandwidth($bw2, 2)
#end if
#if $nchan() > 3
self.$(id).set_center_freq($freq3, 3)
self.$(id).set_freq_corr($corr3, 3)
self.$(id).set_gain($gain3, 3)
self.$(id).set_if_gain($if_gain3, 3)
self.$(id).set_bb_gain($bb_gain3, 3)
self.$(id).set_antenna($ant3, 3)
self.$(id).set_bandwidth($bw3, 3)
#end if
#if $nchan() > 4
self.$(id).set_center_freq($freq4, 4)
self.$(id).set_freq_corr($corr4, 4)
self.$(id).set_gain($gain4, 4)
self.$(id).set_if_gain($if_gain4, 4)
self.$(id).set_bb_gain($bb_gain4, 4)
self.$(id).set_antenna($ant4, 4)
self.$(id).set_bandwidth($bw4, 4)
#end if
  </make>
  <callback>set_sample_rate($sample_rate)</callback>
  <callback>set_center_freq($freq0, 0)</callback>
  <callback>set_freq_corr($corr0, 0)</callback>
  <callback>set_gain($gain0, 0)</callback>
  <callback>set_if_gain($if_gain0, 0)</callback>
  <callback>set_bb_gain($bb_gain0, 0)</callback>
  <callback>set_antenna($ant0, 0)</callback>
  <callback>set_bandwidth($bw0, 0)</callback>
  <callback>set_center_freq($freq1, 1)</callback>
  <callback>set_freq_corr($corr1, 1)</callback>
  <callback>set_gain($gain1, 1)</callback>
  <callback>set_if_gain($if_gain1, 1)</callback>
  <callback>set_bb_gain($bb_gain1, 1)</callback>
  <callback>set_antenna($ant1, 1)</callback>
  <callback>set_bandwidth($bw1, 1)</callback>
  <callback>set_center_freq($freq2, 2)</callback>
  <callback>set_freq_corr($corr2, 2)</callback>
  <callback>set_gain($gain2, 2)</callback>
  <callback>set_if_gain($if_gain2, 2)</callback>
  <callback>set_bb_gain($bb_gain2, 2)</callback>
  <callback>set_antenna($ant2, 2)</callback>
  <callback>set_bandwidth($bw2, 2)</callback>
  <callback>set_center_freq($freq3, 3)</callback>
  <callback>set_freq_corr($corr3, 3)</callback>
  <callback>set_gain($gain3, 3)</callback>
  <callback>set_if_gain($if_gain3, 3)</callback>
  <callback>set_bb_gain($bb_gain3, 3)</callback>
  <callback>set_antenna($ant3, 3)</callback>
  <callback>set_bandwidth($bw3, 3)</callback>
  <callback>set_center_freq($freq4, 4)</callback>
  <callback>set_freq_corr($corr4, 4)</callback>
  <callback>set_gain($gain4, 4)</callback>
  <callback>set_if_gain($if_gain4, 4)</callback>
  <callback>set_bb_gain($bb_gain4, 4)</callback>
  <callback>set_antenna($ant4, 4)</callback>
  <callback>set_bandwidth($bw4, 4)</callback>
  <param>
    <name>Input Type</name>
    <key>type</key>
    <type>enum</type>
    <option>
      <name>Complex float32</name>
      <key>fc32</key>
      <opt>type:fc32</opt>
    </option>
  </param>
  <param>
    <name>Device Arguments</name>
    <key>args</key>
    <value></value>
    <type>string</type>
    <hide>
      #if $args()
        none
      #else
        part
      #end if
    </hide>
  </param>
  <param>
    <name>Num Channels</name>
    <key>nchan</key>
    <value>1</value>
    <type>int</type>
    <option>
      <name>1</name>
      <key>1</key>
    </option>
    <option>
      <name>2</name>
      <key>2</key>
    </option>
    <option>
      <name>3</name>
      <key>3</key>
    </option>
    <option>
      <name>4</name>
      <key>4</key>
    </option>
    <option>
      <name>5</name>
      <key>5</key>
    </option>
  </param>
  <param>
    <name>Sample Rate (sps)</name>
    <key>sample_rate</key>
    <value>samp_rate</value>
    <type>real</type>
  </param>
  
  <param>
    <name>Ch0: Frequency (Hz)</name>
    <key>freq0</key>
    <value>100e6</value>
    <type>real</type>
    <hide>#if $nchan() > 0 then 'none' else 'all'#</hide>
  </param>
  <param>
  <name>Ch0: Freq. Corr. (ppm)</name>
    <key>corr0</key>
    <value>0</value>
    <type>real</type>
    <hide>#if $nchan() > 0 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch0: RF Gain (dB)</name>
    <key>gain0</key>
    <value>10</value>
    <type>real</type>
    <hide>#if $nchan() > 0 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch0: IF Gain (dB)</name>
    <key>if_gain0</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 0 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch0: BB Gain (dB)</name>
    <key>bb_gain0</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 0 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch0: Antenna</name>
    <key>ant0</key>
    <value></value>
    <type>string</type>
    <hide>
      #if not $nchan() > 0
        all
      #elif $ant0()
        none
      #else
        part
      #end if
    </hide>
  </param>
  <param>
    <name>Ch0: Bandwidth (Hz)</name>
    <key>bw0</key>
    <value>0</value>
    <type>real</type>
    <hide>
      #if not $nchan() > 0
        all
      #elif $bw0()
        none
      #else
        part
      #end if
    </hide>
  </param>

  <param>
    <name>Ch1: Frequency (Hz)</name>
    <key>freq1</key>
    <value>100e6</value>
    <type>real</type>
    <hide>#if $nchan() > 1 then 'none' else 'all'#</hide>
  </param>
  <param>
  <name>Ch1: Freq. Corr. (ppm)</name>
    <key>corr1</key>
    <value>0</value>
    <type>real</type>
    <hide>#if $nchan() > 1 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch1: RF Gain (dB)</name>
    <key>gain1</key>
    <value>10</value>
    <type>real</type>
    <hide>#if $nchan() > 1 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch1: IF Gain (dB)</name>
    <key>if_gain1</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 1 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch1: BB Gain (dB)</name>
    <key>bb_gain1</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 1 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch1: Antenna</name>
    <key>ant1</key>
    <value></value>
    <type>string</type>
    <hide>
      #if not $nchan() > 1
        all
      #elif $ant1()
        none
      #else
        part
      #end if
    </hide>
  </param>
  <param>
    <name>Ch1: Bandwidth (Hz)</name>
    <key>bw1</key>
    <value>0</value>
    <type>real</type>
    <hide>
      #if not $nchan() > 1
        all
      #elif $bw1()
        none
      #else
        part
      #end if
    </hide>
  </param>

  <param>
    <name>Ch2: Frequency (Hz)</name>
    <key>freq2</key>
    <value>100e6</value>
    <type>real</type>
    <hide>#if $nchan() > 2 then 'none' else 'all'#</hide>
  </param>
  <param>
  <name>Ch2: Freq. Corr. (ppm)</name>
    <key>corr2</key>
    <value>0</value>
    <type>real</type>
    <hide>#if $nchan() > 2 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch2: RF Gain (dB)</name>
    <key>gain2</key>
    <value>10</value>
    <type>real</type>
    <hide>#if $nchan() > 2 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch2: IF Gain (dB)</name>
    <key>if_gain2</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 2 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch2: BB Gain (dB)</name>
    <key>bb_gain2</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 2 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch2: Antenna</name>
    <key>ant2</key>
    <value></value>
    <type>string</type>
    <hide>
      #if not $nchan() > 2
        all
      #elif $ant2()
        none
      #else
        part
      #end if
    </hide>
  </param>
  <param>
    <name>Ch2: Bandwidth (Hz)</name>
    <key>bw2</key>
    <value>0</value>
    <type>real</type>
    <hide>
      #if not $nchan() > 2
        all
      #elif $bw2()
        none
      #else
        part
      #end if
    </hide>
  </param>

  <param>
    <name>Ch3: Frequency (Hz)</name>
    <key>freq3</key>
    <value>100e6</value>
    <type>real</type>
    <hide>#if $nchan() > 3 then 'none' else 'all'#</hide>
  </param>
  <param>
  <name>Ch3: Freq. Corr. (ppm)</name>
    <key>corr3</key>
    <value>0</value>
    <type>real</type>
    <hide>#if $nchan() > 3 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch3: RF Gain (dB)</name>
    <key>gain3</key>
    <value>10</value>
    <type>real</type>
    <hide>#if $nchan() > 3 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch3: IF Gain (dB)</name>
    <key>if_gain3</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 3 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch3: BB Gain (dB)</name>
    <key>bb_gain3</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 3 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch3: Antenna</name>
    <key>ant3</key>
    <value></value>
    <type>string</type>
    <hide>
      #if not $nchan() > 3
        all
      #elif $ant3()
        none
      #else
        part
      #end if
    </hide>
  </param>
  <param>
    <name>Ch3: Bandwidth (Hz)</name>
    <key>bw3</key>
    <value>0</value>
    <type>real</type>
    <hide>
      #if not $nchan() > 3
        all
      #elif $bw3()
        none
      #else
        part
      #end if
    </hide>
  </param>

  <param>
    <name>Ch4: Frequency (Hz)</name>
    <key>freq4</key>
    <value>100e6</value>
    <type>real</type>
    <hide>#if $nchan() > 4 then 'none' else 'all'#</hide>
  </param>
  <param>
  <name>Ch4: Freq. Corr. (ppm)</name>
    <key>corr4</key>
    <value>0</value>
    <type>real</type>
    <hide>#if $nchan() > 4 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch4: RF Gain (dB)</name>
    <key>gain4</key>
    <value>10</value>
    <type>real</type>
    <hide>#if $nchan() > 4 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch4: IF Gain (dB)</name>
    <key>if_gain4</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 4 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch4: BB Gain (dB)</name>
    <key>bb_gain4</key>
    <value>20</value>
    <type>real</type>
    <hide>#if $nchan() > 4 then 'none' else 'all'#</hide>
  </param>
  <param>
    <name>Ch4: Antenna</name>
    <key>ant4</key>
    <value></value>
    <type>string</type>
    <hide>
      #if not $nchan() > 4
        all
      #elif $ant4()
        none
      #else
        part
      #end if
    </hide>
  </param>
  <param>
    <name>Ch4: Bandwidth (Hz)</name>
    <key>bw4</key>
    <value>0</value>
    <type>real</type>
    <hide>
      #if not $nchan() > 4
        all
      #elif $bw4()
        none
      #else
        part
      #end if
    </hide>
  </param>

  <check>5 >= $nchan</check>
  <check>$nchan > 0</check>
  <sink>
    <name>in</name>
    <type>$type.type</type>
    <nports>$nchan</nports>
  </sink>
  <doc>
The osmocom sink block:

While primarily being developed for the OsmoSDR hardware, this block as well supports:

 * Great Scott Gadgets HackRF through libhackrf
 * Nuand LLC bladeRF through libbladeRF library
 * Ettus USRP Devices through Ettus UHD library
 * Fairwaves UmTRX through Fairwaves' fork of UHD

By using the osmocom sink block you can take advantage of a common software api in your application(s) independent of the underlying radio hardware.

Output Type:
This parameter controls the data type of the stream in gnuradio. Only complex float32 samples are supported at the moment.

Device Arguments:
The device argument is a comma delimited string used to locate devices on your system. Device arguments for multiple devices may be given by separating them with a space.
Use the device id or name/serial (if applicable) to specify a certain device or list of devices. If left blank, the first device found will be used.

Examples:

Optional arguments are placed into [] brackets, remove the brackets before using them! Specific variable values are separated with a |, choose one of them. Variable values containing spaces shall be enclosed in '' as demonstrated in examples section below.
Lines ending with ... mean it's possible to bind devices together by specifying multiple device arguments separated with a space.

  hackrf=0[,buffers=32]
  bladerf=0[,fpga='/path/to/the/bitstream.rbf']
  uhd[,serial=...][,lo_offset=0][,mcr=52e6][,nchan=2][,subdev='\\'B:0 A:0\\''] ...

Num Channels:
Selects the total number of channels in this multi-device configuration. Required when specifying multiple device arguments.

Sample Rate:
The sample rate is the number of samples per second output by this block on each channel.

Frequency:
The center frequency is the frequency the RF chain is tuned to.

Freq. Corr.:
The frequency correction factor in parts per million (ppm). Set to 0 if unknown.

RF Gain:
Overall RF gain of the device.

IF Gain:
Overall intermediate frequency gain of the device.
This setting is available for RTL-SDR and OsmoSDR devices with E4000 tuners and HackRF Jawbreaker in receive and transmit mode. Observations lead to a reasonable gain range from 15 to 30dB.

BB Gain:
Overall baseband gain of the device.
This setting is available for HackRF Jawbreaker in receive mode. Observations lead to a reasonable gain range from 15 to 30dB.

Antenna:
For devices with only one antenna, this may be left blank.
Otherwise, the user should specify one of the possible antenna choices.

Bandwidth:
Set the bandpass filter on the radio frontend. To use the default (automatic) bandwidth filter setting, this should be zero.

See the OsmoSDR project page for more detailed documentation:
http://sdr.osmocom.org/trac/wiki/GrOsmoSDR
http://sdr.osmocom.org/trac/wiki/rtl-sdr
http://sdr.osmocom.org/trac/
  </doc>
</block>
